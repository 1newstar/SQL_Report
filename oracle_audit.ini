[database]
type = Oracle
host = 192.168.0.100
port = 1521
user = system
passwd = 123456
sid = orcl
[report]
report_title = Oracle Audit Report
report_count = 121
#General Database Information
#---1---------------------------------
title1 = Important parameters
query1 = SELECT 1 No, 'Database name' "Parameter", name "Value" FROM v$database UNION
         SELECT 2 No, 'Unique name' "Parameter", db_unique_name "Value" FROM v$database UNION
         SELECT 3 No, 'Instance name' "Parameter", instance_name "Value"  FROM v$instance UNION
         SELECT 4 No, 'Hostname' "Parameter", host_name "Value" FROM v$instance UNION
         SELECT   5 No, 'Platform' "Parameter", platform_name "Value" FROM v$database UNION
         SELECT   6 No, 'Service names' "Parameter", VALUE "Value" FROM   v$parameter WHERE   name = 'service_names' UNION
         SELECT   7 No, 'Db domain' "Parameter", VALUE "Value" FROM   v$parameter WHERE   name = 'db_domain' UNION
         SELECT   8 No, 'Db Created' "Parameter", TO_CHAR (created, 'yyyy-mm-dd') "Value" FROM   v$database UNION 
         SELECT   9 No, 'Startup time' "Parameter", TO_CHAR (startup_time, 'yyyy-mm-dd, hh24:mi') "Value"  FROM   v$instance UNION 
         SELECT   10 No, 'DbId' "Parameter", TO_CHAR (dbid) "Value" FROM v$database UNION
         SELECT   11 No, 'Uptime (Technologies)' "Parameter", TRUNC (SYSDATE - startup_time) || ' Dys ' || TRUNC (MOD (SYSDATE - startup_time, 1) * 24) || ' Hrs ' || TRUNC (MOD ( (SYSDATE - startup_time) * 24, 1) * 60)|| ' Min' "Value" FROM   v$instance UNION
         SELECT   12 No, 'Version' "Parameter", version "Value" FROM v$instance  UNION
         SELECT   13 No,'Banner version' "Parameter",SUBSTR (banner, INSTR (banner, 'Release') + 8, 10) "Value"  FROM   v$version WHERE   banner LIKE 'Oracle%Release%' UNION
         SELECT   14 No, 'compatible' "Parameter", VALUE "Value" FROM   v$parameter WHERE   name = 'compatible' UNION
         SELECT   15 No, 'nls_language' "Parameter", VALUE "Value" FROM   v$nls_parameters WHERE   parameter = 'NLS_LANGUAGE' UNION
         SELECT   16 No, 'nls_territory' "Parameter", VALUE "Value" FROM   v$nls_parameters WHERE   parameter = 'NLS_TERRITORY' UNION
         SELECT   17 No, 'nls_characterset' "Parameter", VALUE "Value" FROM   v$nls_parameters WHERE   parameter = 'NLS_CHARACTERSET' UNION
         SELECT   18 No, 'nls_length_semantics' "Parameter", VALUE "Value" FROM   v$nls_parameters WHERE   parameter = 'NLS_LENGTH_SEMANTICS' UNION
         SELECT   19 No, 'nls_date_format' "Parameter", VALUE "Value" FROM   v$nls_parameters WHERE   parameter = 'NLS_DATE_FORMAT' UNION
         SELECT 20 No, 'Block size' "Parameter", VALUE "Value" FROM v$parameter WHERE name = 'db_block_size' UNION
         SELECT 21 No, 'Sga target' "Parameter", TO_CHAR (ROUND (VALUE / 1048576, 2)) || 'M' "Value" FROM v$parameter WHERE name = 'sga_target' UNION
         SELECT 22 No, 'Shared pool size' "Parameter", TO_CHAR (ROUND (VALUE / 1048576, 2)) || 'M' "Value" FROM v$parameter WHERE name = 'shared_pool_size' UNION
         SELECT 23 No, 'Shared pool reserved' "Parameter", TO_CHAR (ROUND (VALUE / 1048576, 2)) || 'M' "Value" FROM v$parameter WHERE name = 'shared_pool_reserved_size' UNION
         SELECT 24 No, 'Large pool size' "Parameter", TO_CHAR (ROUND (VALUE / 1048576, 2)) || 'M' "Value" FROM v$parameter WHERE name = 'large_pool_size' UNION
         SELECT 25 No, 'Buffer cache' "Parameter", TO_CHAR (ROUND (a.VALUE * b.VALUE / 1048576, 2)) || 'M' FROM v$parameter a, v$parameter b WHERE a.name = 'db_block_buffers' AND b.name = 'db_block_size' UNION
         SELECT 26 No, 'Db cache size' "Parameter", TO_CHAR (ROUND (VALUE / 1048576, 2)) || 'M' "Value" FROM v$parameter WHERE name = 'db_cache_size' UNION
         SELECT 27 No, 'Redo log buffer' "Parameter", TO_CHAR (ROUND (VALUE / 1048576, 2)) || 'M' "Value" FROM v$parameter WHERE name = 'log_buffer' UNION
         SELECT 28 No, 'Java pool size' "Parameter", TO_CHAR (ROUND (VALUE / 1048576, 2)) || 'M' "Value" FROM v$parameter WHERE name = 'java_pool_size' UNION
         SELECT 29 No, 'Sort area size' "Parameter", TO_CHAR (ROUND (VALUE / 1024, 2)) || 'K' "Value" FROM v$parameter WHERE name = 'sort_area_size' UNION
         SELECT 30 No, 'Sort area retained' "Parameter", TO_CHAR (ROUND (VALUE / 1024, 2)) || 'K' "Value" FROM v$parameter WHERE name = 'sort_area_retained_size' UNION
         SELECT 31 No, 'Hash area size' "Parameter", TO_CHAR (ROUND (VALUE / 1024, 2)) || 'K' "Value" FROM v$parameter WHERE name = 'hash_area_size' UNION
         SELECT 32 No, 'Pga aggr target' "Parameter", TO_CHAR (ROUND (VALUE / 1048576, 2)) || 'M' "Value" FROM v$parameter WHERE name = 'pga_aggregate_target' UNION
         SELECT 33 No, 'Workarea size policy' "Parameter", VALUE "Value" FROM v$parameter WHERE name = 'workarea_size_policy' UNION
         SELECT 34 No, 'Optimizer mode' "Parameter", VALUE "Value" FROM v$parameter WHERE name = 'optimizer_mode' UNION
         SELECT 35 No, 'Restricted logins' "Parameter", logins "Value" FROM v$instance UNION
         SELECT 36 No, 'User dump dest' "Parameter", VALUE "Value" FROM v$parameter WHERE name = 'user_dump_dest' UNION
         SELECT 37 No, 'Backgr dump dest' "Parameter", VALUE "Value" FROM v$parameter WHERE name = 'background_dump_dest' UNION
         SELECT 38 No, 'Utl file dir' "Parameter", VALUE "Value" FROM v$parameter WHERE name = 'utl_file_dir' UNION
         SELECT 39 No, 'Spfile' "Parameter", VALUE "Value" FROM v$parameter WHERE name = 'spfile' UNION
         SELECT 40 No, 'Archivelog mode' "Parameter", log_mode "Value" FROM v$database UNION
         SELECT 41 No, 'Sql trace' "Parameter", VALUE "Value" FROM v$parameter WHERE name = 'sql_trace' UNION
         SELECT 42 No, 'Cursor sharing' "Parameter", VALUE "Value" FROM v$parameter WHERE name = 'cursor_sharing'
style1 = {1: 'No,r', 2: 'Parameter,l', 3: 'Value,r'}

#---2---------------------------------
title2 = SGA Distribution
query2 = SELECT   'Total SGA' "Pool",ROUND ( (SUM (a.bytes) + NVL (SUM (b.current_size), 0)) / 1048576,1) "Value (M)"
         FROM   gv$sgastat a, gv$sga_dynamic_components b
         WHERE   NVL (a.pool, name) <> 'streams pool'
         AND b.component = 'streams pool' UNION
         SELECT   pool, ROUND (SUM (bytes) / 1048576, 1) "Value (M)"
         FROM   (SELECT   DECODE (pool, NULL, name, pool) AS pool, bytes FROM gv$sgastat WHERE NVL (pool, name) <> 'streams pool' UNION ALL
                 SELECT   component AS pool, current_size AS bytes FROM   gv$sga_dynamic_components WHERE   component = 'streams pool')
         GROUP BY   pool
         ORDER BY   1, 2
style2 = {1: 'Pool,l', 2: 'Value (M),r'}

#---3---------------------------------
title3 = Database Statistics
query3 = SELECT   1 No,'Library Cache Hit Ratio (%)' "Name",100 * (1 - TRUNC (SUM (reloads) / SUM (gets), 4)) "Value" FROM   v$librarycache UNION
         SELECT   2 No,'Rowcache Hit Ratio (%)' "Name",100 * TRUNC (SUM (getmisses) / (SUM (gets) + SUM (getmisses)), 4) "Value" FROM   v$rowcache UNION
         SELECT   3 No,'Buffer Cache Hit Ratio (%)' "Name",100 * TRUNC (1 - a.VALUE / (b.VALUE + c.VALUE), 4) "Value" FROM   v$sysstat a, v$sysstat b, v$sysstat c
         WHERE    a.name = 'physical reads'  AND b.name = 'db block gets' AND c.name = 'consistent gets' UNION
         SELECT   4 No,'Redo log space requests' "Name", VALUE FROM   v$sysstat WHERE name = 'redo log space requests' UNION
         SELECT   5 No,'Buffer gets (logical) since startup' "Name",a.VALUE + b.VALUE "Value" FROM   v$sysstat a, v$sysstat b
         WHERE   a.name = 'db block gets' AND b.name = 'consistent gets' UNION
         SELECT   6 No,'Physical IO (rds+wrts) since startup' "Name",a.VALUE + b.VALUE "Value" FROM   v$sysstat a, v$sysstat b
         WHERE   a.name = 'physical reads' AND b.name = 'physical writes' UNION
         SELECT   7 No,'table scan rows gotten (avg/sec)' "Name",TRUNC (a.VALUE / ( (SYSDATE - b.startup_time) * 86400), 2) FROM   v$sysstat a, v$instance b
         WHERE   a.name = 'table scan rows gotten' UNION
         SELECT   8 No,'table fetch by rowid (avg/sec)' "Name",TRUNC (a.VALUE / ( (SYSDATE - b.startup_time) * 86400), 2) FROM   v$sysstat a, v$instance b
         WHERE   name = 'table fetch by rowid' UNION
         SELECT   9 No,'Buffer gets (logical) (avg/sec)' "Name",TRUNC ( (a.VALUE + b.VALUE) / ( (SYSDATE - c.startup_time) * 86400),1) "Value"
         FROM   v$sysstat a, v$sysstat b, v$instance c WHERE   a.name = 'db block gets' AND b.name = 'consistent gets' UNION
         SELECT   10 No, 'Buffer gets (logical) (avg/sec)' "Name", TRUNC ( (a.VALUE + b.VALUE) / ( (SYSDATE - c.startup_time) * 86400),1) "Value"
         FROM   v$sysstat a, v$sysstat b, v$instance c WHERE   a.name = 'physical reads' AND b.name = 'physical writes' UNION
         SELECT   11 No, 'CPU used (avg %)' "Name", TRUNC (a.VALUE / ( (SYSDATE - b.startup_time) * 86400), 1) FROM   v$sysstat a, v$instance b WHERE   a.name = 'CPU used by this session'
style3 = {1: 'No,r', 2: 'Name,l', 3: 'Value,r'}

#---4---------------------------------
title4 = Key system stats since startup
query4 = SELECT   name,TO_CHAR (VALUE) "VALUE" FROM   v$sysstat
         WHERE   name IN ('table scans (short tables)', 'table scans (long tables)', 'table scan rows gotten', 'table scan blocks gotten', 'table fetch by rowid', 'table fetch continued row')UNION
         SELECT   name, TO_CHAR (VALUE) FROM   v$sysstat WHERE   name LIKE 'sort%' UNION
         SELECT   name, TO_CHAR (VALUE) FROM   v$parameter WHERE   name IN ('sort_area_size', 'sort_area_retained_size') UNION
         SELECT   name, TO_CHAR (VALUE) FROM   v$sysstat WHERE   name IN ('enqueue waits', 'enqueue deadlocks') UNION
         SELECT   name, VALUE FROM   v$parameter WHERE   name IN ('timed_statistics', 'statistics_level', 'timed_os_statistics')
style4 = {1: 'Name,l', 2: 'Value,r'}

#---5---------------------------------
title5 = Instance overview
query5 = SELECT INST_ID Id,INSTANCE_NUMBER Nr,INSTANCE_NAME Name,HOST_NAME HOST,TO_CHAR (STARTUP_TIME, 'yyyy-mm-dd hh24:mi:ss') Startup,
         Status,PARALLEL Par,THREAD# Thread,LOGINS Logins FROM gv$instance
style5 = {1: 'Id,r', 2: 'Nr,r', 3: 'Name,l', 4: 'HOST,l', 5: 'Startup,l', 6: 'Status,l', 7: 'Par,l', 8: 'Thread,r', 9: 'Logins,l'}

#File Information
#---6---------------------------------
title6 = Redolog files
query6 = SELECT a.MEMBER "File name",'Thr ' || b.thread# "Thread",'Grp ' || a.group# "Group",b.bytes "Size",a.status,a.TYPE
         FROM v$logfile a, v$log b WHERE   a.group# = b.group# ORDER BY   b.thread#, a.group#
style6 = {1: 'File name,l', 2: 'Thread,l', 3: 'Group,l', 4: 'Size,r', 5: 'status,l', 6: 'TYPE,l'}

#---7---------------------------------
title7 = Control Files
query7 = select name from v$controlfile
style7 = {1: 'Name,l'}

#---8---------------------------------
title8 = Tablespaces and datafiles
query8 = SELECT bb.tablespace_name "TsName",bb.bytes / 1048576 || 'M' "TS size",ROUND ( (bb.bytes - aa.freebytes) / 1048576, 2)
         || 'M'|| ' ('|| 100 * ROUND ( (bb.bytes - aa.freebytes) / bb.bytes, 2)|| '%)' "Used",
         ROUND (bb.maxbytes / 1073741824, 1) || 'G' "AutoExt MaxSize",100 * ROUND ( (bb.bytes - aa.freebytes) / bb.maxbytes, 2) "%AutoMax",
         cc.file_name,cc.TP,SUBSTR (cc.status, 1, 1) "Ai",cc.Stat,cc.bytes / 1048576 || 'M' "Filesize",cc.autoextensible "Aut Ext",
         cc.increment_by / 1024 || 'M' "Incr.",DECODE (autoextensible,'YES', ROUND (cc.maxbytes / 1073741824, 1) || 'G',NULL) "Filemax"
         FROM (SELECT   a.tablespace_name,NVL (SUM (b.bytes), 0) freebytes,a.status FROM   dba_tablespaces a, dba_free_space b
         WHERE   a.tablespace_name = b.tablespace_name(+) AND a.contents <> 'TEMPORARY' GROUP BY   a.tablespace_name, a.status UNION ALL
         SELECT   c.tablespace_name,NVL (total_bytes - used_bytes, 0) freebytes,c.status FROM   dba_tablespaces c,
         (SELECT   tablespace_name,NVL (SUM (total_blocks * b.VALUE), 0) used_bytes
         FROM   gv$sort_segment a, v$parameter b WHERE   b.name = 'db_block_size' GROUP BY   a.tablespace_name) d,
         (SELECT   tablespace_name,NVL (SUM (bytes), 0) total_bytes FROM   dba_temp_files
         GROUP BY   tablespace_name UNION ALL
         SELECT   tablespace_name,NVL (SUM (bytes), 0) total_bytes FROM   dba_data_files GROUP BY   tablespace_name) e
         WHERE e.tablespace_name = c.tablespace_name AND c.tablespace_name = d.tablespace_name(+) AND c.contents = 'TEMPORARY') aa,
         (SELECT   tablespace_name,SUM (bytes) AS bytes,SUM(DECODE (autoextensible,'YES', GREATEST (maxbytes, bytes), bytes)) maxbytes
         FROM   (SELECT tablespace_name,bytes,autoextensible,maxbytes FROM   dba_data_files UNION ALL
         SELECT tablespace_name,bytes,autoextensible,maxbytes FROM   dba_temp_files)
         GROUP BY   tablespace_name) bb,(SELECT   'D' TP,a.file_id,a.file_name,a.bytes,a.status,a.tablespace_name,a.maxbytes,a.autoextensible,
         a.increment_by, b.status Stat FROM   dba_data_files a, v$datafile b WHERE   a.file_id = b.file# UNION ALL
         SELECT   'T' TP,a.file_id,a.file_name,a.bytes,a.status,a.tablespace_name,a.maxbytes, a.autoextensible,a.increment_by,
         b.status AS Stat FROM   dba_temp_files a, v$tempfile b WHERE   a.file_id = b.file#) cc
         WHERE   aa.tablespace_name(+) = bb.tablespace_name AND aa.tablespace_name = cc.tablespace_name ORDER BY   bb.tablespace_name, cc.file_id
style8 = {1: 'TsName,l', 2: 'TS size,r', 3: 'Used,r', 4: 'AutoExt MaxSize,r', 5: '%AutoMax,r', 6: 'File_name,l', 7: 'TP,l', 8: 'Ai,r', 9: 'Stat,l', 10: 'Filesize,r', 11: 'Aut Ext,l', 12: 'Incr.,r', 13: 'Filemax.,r'}

#---9---------------------------------
title9 = Segment size
query9 = SELECT   segment_type "Segment type",ROUND (SUM (bytes) / 1048576, 2) "Size (M)" FROM   dba_segments GROUP BY   segment_type UNION ALL
         SELECT   'TEMPORARY', ROUND (NVL (TOTAL_BLOCKS * b.VALUE, 0) / 1048576, 2) FROM   gv$sort_segment a, v$parameter b WHERE   b.name = 'db_block_size' ORDER BY   2 DESC
style9 = {1: 'Segment type,l', 2: 'Size (M),r'}

#---10---------------------------------
title10 = Segment size
query10 = SELECT   'Datafiles' "File type", ROUND (SUM (bytes) / 1048576, 2) "Size (M)" FROM   v$datafile UNION ALL
          SELECT   'Tempfiles' "File type",ROUND (NVL (SUM (bytes), 0) / 1048576, 2) "Size (M)" FROM   v$tempfile UNION ALL
          SELECT   'Redolog files' "File type",ROUND (SUM (bytes * members) / 1048576, 2) "Size (M)" FROM   v$log
style10 = {1: 'File type,l', 2: 'Size (M),r'}

#---11---------------------------------
title11 = Offline/recover datafiles
query11 = SELECT   a.name Filename,a.status,RECOVER,error FROM   v$datafile a, v$datafile_header b
          WHERE   a.file# = b.file# AND (   a.status NOT IN ('SYSTEM', 'ONLINE') OR error IS NOT NULL OR RECOVER = 'YES')
style11 = {1: 'Filename,l', 2: 'Status,l', 3: 'Recover,l', 4: 'Error,l'}

#---12---------------------------------
title12 = Files in hot backup
query12 = SELECT   file_name FROM   dba_data_files a, v$backup b WHERE   a.file_id = b.file# AND b.status = 'ACTIVE'
style12 = {1: 'File name,l'}

#---13---------------------------------
title13 = Files with bytes > maxbytes
query13 = SELECT   TYPE,file_name,bytes,maxbytes
          FROM   (SELECT   'Data' TYPE,file_name,bytes,maxbytes,autoextensible FROM dba_data_files UNION ALL
                  SELECT   'Temp' TYPE,file_name,bytes,maxbytes,autoextensible FROM   dba_temp_files)
          WHERE   bytes > maxbytes AND autoextensible = 'YES'
style13 = {1: 'Type,l', 2: 'File name,l', 3: 'Bytes,r', 4: 'Maxbytes,r'}

#---14---------------------------------
title14 = Number of datafiles
query14 = SELECT   1 No, 'Max datafiles in controlfile' "Name", records_total "Value" FROM   v$controlfile_record_section WHERE   TYPE = 'DATAFILE' UNION
          SELECT   2 No, 'db_files in init.ora' "Name", TO_NUMBER (VALUE) "Value" FROM   v$parameter WHERE   name = 'db_files' UNION
          SELECT   3 No, 'Current nr of datafiles' "Name", COUNT ( * ) "Value" FROM   v$datafile UNION
          SELECT   4 No, 'Current nr of tempfiles' "Name", COUNT ( * ) "Value" FROM   v$tempfile
style14 = {1: 'No,l', 2: 'Name,l', 3: 'Value,r'}

#Storage parameters and file statistics
#---15---------------------------------
title15 = Tablespace storage parameters
query15 = SELECT   tablespace_name "Tablespace Name",initial_extent / 1024 "Init(K)",next_extent / 1024 "Next(K)",min_extents "Min",
           DECODE (SIGN (max_extents - 99999),-1, TO_CHAR (max_extents),'Unlim') "Max",pct_increase "Pct",
           status "Stat",SUBSTR (contents, 1, 4) "Cont",SUBSTR (extent_management, 1, 4) "Mgmt",
           DECODE (allocation_type, 'SYSTEM', 'AUTO', allocation_type) "AllocType",min_extlen / 1024 "MinExtLen(K)",
           SUBSTR (logging, 1, 3) "Log",segment_space_management "ASSM",block_size
          FROM   dba_tablespaces ORDER BY   tablespace_name
style15 = {1: 'Tablespace Name,l', 2: 'Init(K),r', 3: 'Next(K),r', 4: 'Min,r', 5: 'Max,r', 6: 'Pct,r', 7: 'Stat,l', 8: 'Cont,r', 9: 'Mgmt,l', 10: 'AllocType,l', 11: 'MinExtLen(K),r', 12: 'Log,l', 13: 'ASSM,l', 14: 'Block size,r'}

#---16---------------------------------
title16 = Segment size by owner and tablespace
query16 = SELECT   owner,tablespace_name, SUM (bytes)/1048576 "Size(M)"
          FROM   dba_segments GROUP BY   owner, tablespace_name ORDER BY   owner, tablespace_name
style16 = {1: 'Owner,l', 2: 'Tablespace Name,l', 3: 'Size(M),r'}

#---17---------------------------------
title17 = Top 10 tablespace usage by owner
query17 = SELECT   ROWNUM AS No, a.* FROM   (SELECT owner,tablespace_name,ROUND (SUM (bytes) / 1048576, 1) "Usage(M)" FROM   dba_segments
          GROUP BY   owner, tablespace_name ORDER BY   SUM (bytes) DESC) a WHERE   ROWNUM < 11
style17 = {1: 'No,l', 2: 'Owner,l', 3: 'Tablespace Name,l', 4: 'Usage(M),l'}

#---18---------------------------------
title18 = Segment size by owner and tablespace
query18 = SELECT   1 No, 'db_file_multiblock_read_count' "Parameter", VALUE FROM   v$parameter WHERE   name = 'db_file_multiblock_read_count' UNION
          SELECT   2 No, 'disk_asynch_io' "Parameter", VALUE FROM   v$parameter WHERE   name = 'disk_asynch_io' UNION
          SELECT   3 No, 'filesystemio_options' "Parameter", VALUE FROM   v$parameter WHERE   name = 'filesystemio_options' UNION
          SELECT   4 No, 'db_writer_processes' "Parameter", VALUE FROM   v$parameter WHERE   name = 'db_writer_processes' UNION
          SELECT   5 No, 'dbwr_io_slaves' "Parameter", VALUE FROM   v$parameter WHERE   name = 'dbwr_io_slaves' UNION
          SELECT   6 No, 'db_block_checking' "Parameter", VALUE FROM   v$parameter WHERE   name = 'db_block_checking' UNION
          SELECT   7 No, 'db_block_checksum' "Parameter", VALUE FROM   v$parameter WHERE   name = 'db_block_checksum' UNION
          SELECT   8 No, 'fast_start_mttr_target' "Parameter", VALUE FROM   v$parameter WHERE   name = 'fast_start_mttr_target' UNION
          SELECT   9 No, 'tape_asynch_io' "Parameter", VALUE FROM   v$parameter WHERE   name = 'tape_asynch_io' UNION
          SELECT   10 No, 'log_checkpoint_interval' "Parameter", VALUE FROM   v$parameter WHERE   name = 'log_checkpoint_interval' UNION
          SELECT   11 No, 'log_checkpoint_timeout' "Parameter", VALUE FROM   v$parameter WHERE   name = 'log_checkpoint_timeout'
style18 = {1: 'No,r', 2: 'Parameter,l', 3: 'VALUE,r'}

#---19---------------------------------
title19 = Users's temporary tablespaces
query19 =  SELECT   a.tablespace_name "TsName",b.bytes / 1048576 || 'M' "Size",a.initial_extent / 1048576 || 'M' "Init",
           a.next_extent / 1048576 || 'M' "Next",a.min_extents "Min_ext",DECODE (SIGN (a.max_extents - 99999),-1, TO_CHAR (a.max_extents),'Unlim') "Max_ext",
           a.pct_increase "Pct_inc",a.extent_management "Mgmt",DECODE (a.allocation_type, 'SYSTEM', 'AUTO', a.allocation_type) "AllocType",
           a.status,TRUNC (CEIL (b.bytes / a.next_extent)) "Max poss ext",SUBSTR (a.contents, 1, 4) "Cont"
           FROM   dba_tablespaces a, (  SELECT   tablespace_name, SUM (bytes) AS bytes FROM   dba_data_files GROUP BY   tablespace_name UNION ALL
                                 SELECT   tablespace_name, SUM (bytes) AS bytes FROM   dba_temp_files GROUP BY   tablespace_name) b
           WHERE   a.tablespace_name = b.tablespace_name AND a.tablespace_name IN(SELECT   temporary_tablespace FROM   dba_users
                      WHERE   username NOT IN ('SYS','DRSYS','SYSTEM','DBSNMP','OUTLN')) AND a.tablespace_name NOT IN ('SYSTEM') ORDER BY   a.tablespace_name
style19 = {1: 'TsName,l', 2: 'Size,r', 3: 'Init,r', 4: 'Next,r', 5: 'Min_ext,r', 6: 'Max_ext,r', 7: 'Pct_inc,r', 8: 'Mgmt,r', 9: 'AllocType,l', 10: 'Status,l', 11: 'Max poss ext,r', 12: 'Cont,l'}

#---20---------------------------------
title20 = Datafile IO since startup (top 25)
query20 = SELECT   ROWNUM AS No, d.*
          FROM   (SELECT   b.file_name,a.phyrds + a.phywrts "Total",a.phyrds,a.phywrts,a.phyblkrd, a.phyblkwrt,
                   DECODE (a.phyrds, 0, 0, TRUNC (a.phyblkrd / a.phyrds, 2)) "Blks/Rd",
                   TRUNC ((a.phyrds + a.phywrts) / ( (SYSDATE - c.startup_time) * 86400),2) "R+W/sec",
                   DECODE (PHYRDS, 0, 0, ROUND (READTIM / PHYRDS, 2)) "AvgRdTim",
                   DECODE (PHYWRTS, 0, 0, ROUND (WRITETIM / PHYWRTS, 2)) "AvgWrtTim",
                   singleblkrds "SBlkRds", DECODE (SINGLEBLKRDS,0, 0, ROUND (SINGLEBLKRDTIM / SINGLEBLKRDS, 2)) "AvgSRdTim"
          FROM   v$filestat a, dba_data_files b, v$instance c WHERE   a.file# = b.file_id UNION ALL
          SELECT  /*+ RULE ordered */ b  .file_name, a.phyrds + a.phywrts "Total",a.phyrds,a.phywrts,a.phyblkrd,a.phyblkwrt,
                   DECODE (a.phyrds, 0, 0, TRUNC (a.phyblkrd / a.phyrds, 2)) "Blks/Rd",
                   TRUNC ((a.phyrds + a.phywrts)/ ( (SYSDATE - c.startup_time) * 86400),2) "R+W/sec",
                   DECODE (PHYRDS, 0, 0, ROUND (READTIM / PHYRDS, 2)) "AvgRdTim",
                   DECODE (PHYWRTS, 0, 0, ROUND (WRITETIM / PHYWRTS, 2)) "AvgWrtTim", singleblkrds "SBlkRds",
                   DECODE (SINGLEBLKRDS,0, 0, ROUND (SINGLEBLKRDTIM / SINGLEBLKRDS, 2)) "AvgSRdTim"
          FROM   v$tempstat a, dba_temp_files b, v$instance c WHERE   a.file# = b.file_id
          ORDER BY   2 DESC) d WHERE   ROWNUM < 26
style20 = {1: 'No,r', 2: 'File name,l', 3: 'Total,r', 4: 'Phyrds,r', 5: 'Phywrts,r', 6: 'Phyblkrd,r', 7: 'Phyblkwrt,r', 8: 'Blks/Rd,r', 9: 'R+W/sec,r', 10: 'AvgRdTim,r', 11: 'AvgWrtTim,r', 12: 'SBlkRds,r', 13: 'AvgSRdTim,r'}

#Rollback segment information
#---21---------------------------------
title21 = Rollback Segments
query21 = SELECT   c.segment_name "RbsName",c.tablespace_name "TsName",d.rssize/1024||'K' "Size",c.owner "Owner",c.initial_extent/1024||'K' "Init",
          c.next_extent "Next",c.min_extents "MinExt",c.max_extents "MaxExt",d.optsize "OptSize",c.status "Stat"
          FROM   dba_rollback_segs c, (SELECT   a.name,b.rssize,b.optsize,b.usn FROM   v$rollname a, v$rollstat b WHERE   a.usn = b.usn(+)) d
          WHERE   c.segment_name = d.name(+) AND c.segment_name NOT LIKE '_SYSSMU%'
style21 = {1: 'RbsName,l', 2: 'TsName,l', 3: 'Size,r', 4: 'Owner,l', 5: 'Init,r', 6: 'Next,r', 7: 'MinExt,r', 8: 'MaxExt,r', 9: 'OptSize,r', 10: 'Stat,r'}

#---22---------------------------------
title22 = Rollback segment statistics
query22 = SELECT   a.name "RbsName",b.rssize / 1024 || 'K' "Size",b.optsize,b.hwmsize / 1024 || 'K' "HwmSize",b.extents "Extnt",
          b.extends "Extnd",b.shrinks "Shrnk",b.wraps,100 * TRUNC (b.waits / b.gets, 4) "Wait%"
          FROM   v$rollname a, v$rollstat b WHERE   a.usn = b.usn AND a.name NOT LIKE '_SYSSMU%'
style22 = {1: 'RbsName,l', 2: 'Size,r', 3: 'optsize,r', 4: 'Hwmsize,l', 5: 'Extnt,r', 6: 'Extnd,r', 7: 'Shrnk,r', 8: 'Wraps,r', 9: 'Wait%",r'}

#---23---------------------------------
title23 = Related init.ora
query23 = SELECT   1 No, 'rollback_segments' "Parameter", VALUE "Value" FROM   v$parameter WHERE   name = 'rollback_segments' UNION
          SELECT   2 No, 'undo_management' "Parameter", VALUE "Value" FROM   v$parameter WHERE   name = 'undo_management' UNION
          SELECT   3 No, 'undo_tablespace' "Parameter", VALUE "Value" FROM   v$parameter WHERE   name = 'undo_tablespace' UNION
          SELECT   4 No, 'undo_retention' "Parameter", VALUE "Value" FROM   v$parameter WHERE   name = 'undo_retention'
style23 = {1: 'No,r', 2: 'Parameter,l', 3: 'Value,r'}

#---24---------------------------------
title24 = Undo statistics per day
query24 = SELECT   TRUNC (begin_time) "From",LEAD (TRUNC (begin_time), 1) OVER (ORDER BY TRUNC (begin_time)) "Until",
          TRUNC (  SUM (undoblks)* (SELECT   VALUE FROM   v$parameter WHERE   name = 'db_block_size') / 1048576, 1)|| 'M' "Undo size",
          TRUNC (SUM (txncount) / 1024, 1) || 'K' "Transactions" FROM   v$undostat  WHERE   begin_time > (  SELECT   startup_time FROM v$instance)
          GROUP BY   TRUNC (begin_time)
style24 = {1: 'From,l', 2: 'Until,l', 3: 'Undo size,r', 4: 'Transactions,r'}

#Backup and recovery
#---25---------------------------------
title25 = Archivelog settings
query25 = SELECT   'Archivelog mode' "Name", log_mode "Value" FROM v$database UNION
          SELECT   name, VALUE FROM   v$parameter WHERE   (name LIKE 'log_archive%' ESCAPE '#'  AND (VALUE IS NOT NULL AND VALUE <> 'enable'))
style25 = {1: 'Name,l', 2: 'Value,r'}

#---26---------------------------------
title26 = Standby/dataguard parameters
query26 = SELECT   'Dataguard broker' "Parameter", DATAGUARD_BROKER "Value" FROM   v$database UNION
          SELECT   'Guard status' "Parameter", GUARD_STATUS "Value" FROM v$database UNION
          SELECT   'Force logging' "Parameter", FORCE_LOGGING "Value" FROM v$database UNION
          SELECT   'Protection mode' "Parameter", PROTECTION_MODE "Value" FROM   v$database UNION
          SELECT   'Protection level' "Parameter", PROTECTION_LEVEL "Value" FROM   v$database UNION
          SELECT   'Supp log data MIN' "Parameter", SUPPLEMENTAL_LOG_DATA_MIN "Value" FROM   v$database UNION
          SELECT   'Supp log data PK' "Parameter", SUPPLEMENTAL_LOG_DATA_PK "Value" FROM   v$database UNION
          SELECT   'Supp log data UI' "Parameter", SUPPLEMENTAL_LOG_DATA_UI "Value" FROM   v$database UNION
          SELECT   name "Parameter", VALUE FROM   v$parameter WHERE (name LIKE 'fal%') OR (name LIKE '%standby%') 
          OR (name LIKE '%dg%')  OR (name LIKE '%drs_start%') OR (name = 'archive_lag_target')
style26 = {1: 'Parameter,l', 2: 'Value,r'}

#---27---------------------------------
title27 = Recent redolog activity (14 days)
query27 = SELECT   TO_CHAR( TRUNC (a.first_time), 'Dy yyyy-mm-dd' ) "Time",a.thread# "Thr",MIN (a.sequence#) "MinSeq#",
          MAX (a.sequence#) "MaxSeq#",MIN (a.first_change#) "Min Change#",COUNT ( * ) "#LogSwitches", SUM (b.blocks * b.block_size) "ArchivedSize"
          FROM   v$log_history a, v$archived_log b WHERE a.sequence# = b.sequence#(+) AND a.thread# = b.thread#(+)
          AND TRUNC (a.first_time) >= TRUNC (SYSDATE - 14) GROUP BY   a.thread#, TRUNC (a.first_time) ORDER BY   a.thread#, TRUNC (a.first_time)
style27 = {1: 'Time,l', 2: 'Thr,r', 3: 'MinSeq#,r', 4: 'MaxSeq#,l', 5: 'Min Change#,r', 6: '#LogSwitches,r', 7: 'ArchivedSize,r'}

#---28---------------------------------
title28 = Archive destination details
query28 = SELECT   DEST_ID "Id",STATUS "Status",SUBSTR (BINDING, 1, 3) "Opt",SUBSTR (TARGET, 1, 4) "Trgt",REOPEN_SECS "Reop",
          SUBSTR (ERROR, 1, 9) "Err",SUBSTR (ARCHIVER, 1, 4) "Arch",SCHEDULE "Schedl",LOG_SEQUENCE "Seq#",NET_TIMEOUT "TmOut",
          REGISTER "Reg",SUBSTR (TRANSMIT_MODE, 1, 4) "Mode",AFFIRM "Aff",VERIFY "Ver",DEST_NAME,
          SUBSTR (VALID_TYPE, 1, 3) "Typ",SUBSTR (VALID_ROLE, 1, 3) "Rol",DB_UNIQUE_NAME "Uniq",DESTINATION "Dest"
          FROM   v$archive_dest WHERE   status <> 'INACTIVE'
style28 = {1: 'Id,r', 2: 'Status,l', 3: 'Opt,l', 4: 'Trgt,l', 5: 'Reop,r', 6: 'Err,r', 7: 'Arch,l', 8: 'Schedl,l', 9: 'Seq#,r', 10: 'TmOut,r', 11: 'Reg,l', 12: 'Mode,l', 13: 'Aff,l', 14: 'Ver,l', 15: 'DEST_NAME,l', 16: 'Typ,l', 17: 'Rol,l', 18: 'Uniq,l', 19: 'Dest,l'}

#---29---------------------------------
title29 = Latest archivelogs
query29 = SELECT   thread# "Thr",sequence# "Seq",TO_CHAR (FIRST_TIME, 'yyyy-mm-dd hh24:mi:ss') "Time",creator "Crea",registrar "Regi",
          standby_dest "Sby",archived "Arc",applied "App",deleted "Del",blocks * block_size "Size",status "Stat",NAME
          FROM   v$archived_log WHERE   sequence# > (  SELECT   MAX (sequence#) - 5 FROM v$archived_log) ORDER BY   sequence# DESC
style29 = {1: 'Thr,r', 2: 'Seq,r', 3: 'Time,l', 4: 'Crea,l', 5: 'Regi,l', 6: 'Sby,l', 7: 'Arc,l', 8: 'App,l', 9: 'Del,l', 10: 'Size,r', 11: 'Stat,l', 12: 'NAME,l'}

#---30---------------------------------
title30 = Flashback parameters
query30 = SELECT   'Flashback on?' "Name", FLASHBACK_ON "Value" FROM V$DATABASE UNION
          SELECT   name, VALUE  FROM   v$parameter  WHERE   (name LIKE '%flashback%' OR name LIKE '%recovery_file%') ORDER BY   1
style30 = {1: 'name,l', 2: 'Value,r'}

#---31---------------------------------
title31 = Database incarnations
query31 = SELECT   resetlogs_change# "ResetLogs#",TO_CHAR (RESETLOGS_TIME, 'yyyy-mm-dd hh24:mi:ss') "ResetLogTime",
          prior_resetlogs_change# "PrioRstLogs#",incarnation# "Inc",status "Status",prior_incarnation# "Prio",flashback_database_allowed "Fdo"
          FROM   v$database_incarnation
style31 = {1: 'ResetLogs#,r', 2: 'ResetLogTime,l', 3: 'PrioRstLogs#,r', 4: 'Inc,r', 5: 'Status,l', 6: 'Prio,r', 7: 'Fdo,l'}

#---32---------------------------------
title32 = Flashback usage
query32 = SELECT   file_type "File type",SUM (percent_space_used) "PctUsed",
          ROUND (  SUM (percent_space_used)* (SELECT   TO_NUMBER (VALUE) FROM   v$parameter WHERE   name = 'db_recovery_file_dest_size')/ 100) "BytesUsed",
          SUM (percent_space_reclaimable) "PctReclaim",SUM (number_of_files) "Files"
          FROM   v$flash_recovery_area_usage GROUP BY   ROLLUP (file_type)
style32 = {1: 'File type,l', 2: 'PctUsed,r', 3: 'BytesUsed,r', 4: 'PctReclaim,r', 5: 'Files,r'}

#---33---------------------------------
title33 = Restore points
query33 = SELECT   scn,name,guarantee_flashback_database "GFB", storage_size,TO_CHAR (TIME, 'yyyy-mm-dd hh24:mi:ss') "Timestamp" FROM   v$restore_point
style33 = {1: 'scn,r', 2: 'name,l', 3: 'GFB,l', 4: 'storage_size,r', 5: 'Timestamp,l'}

#Possible storage problems
#---34---------------------------------
title34 = Tables where 4 next extents will not fit
query34 = SELECT   owner,segment_name "Segment",bytes / 1048576 "SegSize",a.tablespace_name "TsName",ts_type "Allocation",
          a.initial_extent "Initial",a.next_extent "Next",a.pct_increase "PctInc",next_1,next_2,next_3,next_4
          FROM   (SELECT   'Dictionary' AS ts_type,s.tablespace_name,s.owner,s.segment_name,s.bytes,s.initial_extent,
                   s.next_extent,s.pct_increase,s.next_extent AS next_1,
                   s.next_extent * (1 + s.pct_increase / 100) AS next_2,s.next_extent* (1 + s.pct_increase / 100)* (1 + s.pct_increase / 100) AS next_3,
                     s.next_extent* (1 + s.pct_increase / 100)* (1 + s.pct_increase / 100)* (1 + s.pct_increase / 100) AS next_4
            FROM   dba_segments s, dba_tablespaces t WHERE   s.tablespace_name = t.tablespace_name AND t.extent_management = 'DICTIONARY'
          UNION ALL
          SELECT   'Local uniform',s.tablespace_name,s.owner,s.segment_name,s.bytes,s.initial_extent,s.next_extent,
                   s.pct_increase,t.next_extent,t.next_extent,t.next_extent,t.next_extent
            FROM   dba_segments s, dba_tablespaces t WHERE s.tablespace_name = t.tablespace_name AND t.extent_management = 'LOCAL' AND allocation_type = 'UNIFORM'
          UNION ALL
          SELECT   'Local system',s.tablespace_name,s.owner,s.segment_name,s.bytes,s.initial_extent,s.next_extent,s.pct_increase,
                   DECODE (TRUNC (bytes / (1024 * 1024)),0,(64 * 1024),
                      DECODE (TRUNC (bytes / (64 * 1024 * 1024)),0,(1024 * 1024),
                         DECODE (TRUNC (bytes / (1024 * 1024 * 1024)),0, (8 * 1024 * 1024),(64 * 1024 * 1024)))) next_1,
                   DECODE (TRUNC (bytes / (1024 * 1024 - 64 * 1024)),0,(64 * 1024),
                      DECODE (TRUNC (bytes / (64 * 1024 * 1024 - 1024 * 1024)),0,(1024 * 1024),
                         DECODE (TRUNC (bytes / (1024 * 1024 * 1024 - 8 * 1024 * 1024)),0,(8 * 1024 * 1024),(64 * 1024 * 1024)))) next_2,
                   DECODE (TRUNC (bytes / (1024 * 1024 - 64 * 1024 - 64 * 1024)),0,(64 * 1024),
                      DECODE (TRUNC(bytes/ (  64 * 1024 * 1024 - 1024 * 1024 - 1024 * 1024)),0,(1024 * 1024),
                         DECODE (TRUNC(bytes / (  1024 * 1024 * 1024 - 8 * 1024 * 1024 - 8 * 1024 * 1024)),0,(8 * 1024 * 1024),(64 * 1024 * 1024)))) next_3,
                   DECODE (TRUNC(bytes / (  1024 * 1024 - 64 * 1024 - 64 * 1024 - 64 * 1024)),0,(64 * 1024),
                      DECODE (TRUNC(bytes/ (  64 * 1024 * 1024 - 1024 * 1024 - 1024 * 1024 - 1024 * 1024)),0,(1024 * 1024),
                         DECODE (TRUNC(bytes/ (  1024 * 1024 * 1024 - 8 * 1024 * 1024 - 8 * 1024 * 1024 - 8 * 1024 * 1024)),0,(8 * 1024 * 1024),(64 * 1024 * 1024)))) next_4
            FROM   dba_segments s, dba_tablespaces t WHERE  s.tablespace_name = t.tablespace_name AND t.extent_management = 'LOCAL' AND allocation_type = 'SYSTEM') a,
           (  SELECT   tablespace_name, MAX (bytes) AS maxfree FROM   (  SELECT   tablespace_name, bytes FROM dba_free_space UNION ALL
                      SELECT   tablespace_name,maxbytes - LEAST (maxbytes, bytes) AS bytes FROM   dba_data_files WHERE   autoextensible = 'YES')
          GROUP BY   tablespace_name) b, dba_tablespaces c, sys.ts$ d
          WHERE       a.tablespace_name = b.tablespace_name AND a.tablespace_name = c.tablespace_name AND c.tablespace_name = d.name AND next_1 + next_2 + next_3 + next_4 > maxfree
style34 = {1: 'Owner#,l', 2: 'Segment,l', 3: 'SegSize,r', 4: 'TsName,l', 5: 'Allocation,r', 6: 'Initial,r', 7: 'Next,r', 8: 'PctInc,r', 9: 'next_1,r', 10: 'next_2,r', 11: 'next_3,r', 12: 'next_4,r'}

#---35---------------------------------
title35 = Tables within 5 of their max extents
query35 = SELECT   owner,segment_name "Name",segment_type "Type",tablespace_name "TsName",extents "Xtnts",
          max_extents "MaxXtnts",bytes "Size",initial_extent "Init",next_extent "Next",pct_increase "Pct"
          FROM   dba_segments WHERE   extents >= max_extents - 5 AND segment_type <> 'CACHE' ORDER BY   extents DESC
style35 = {1: 'Owner,l', 2: 'Name,l', 3: 'Type,l', 4: 'TsName,l', 5: 'Xtnts,r', 6: 'MaxXtnts,r', 7: 'Size,r', 8: 'Init,r', 9: 'next,r', 10: 'Pct,r'}

#---36---------------------------------
title36 = Segments of SYS, top 10 by nr of extents
query36 = SELECT   segment_name "Name",segment_type "Type",tablespace_name "TsName",extents "Xtnts",
          bytes / 1024 || 'K' "Size",initial_extent "Init",next_extent "Next",pct_increase "Pct"
          FROM   dba_segments WHERE   owner = 'SYS' AND tablespace_name IN (SELECT   tablespace_name
                                   FROM   dba_tablespaces WHERE   extent_management = 'DICTIONARY')
style36 = {1: 'Name,l', 2: 'Type,l', 3: 'TsName,l', 4: 'Xtnts,r', 5: 'Size,r', 6: 'Init,r', 7: 'next,r', 8: 'Pct,r'}

#---37---------------------------------
title37 = Segments non-SYS, top 10 by nr of extents
query37 = SELECT   a.owner,a.segment_name "Name",a.segment_type "Type",a.tablespace_name "TsName",a.extents "Xtnts",
          a.bytes / 1024 || 'K' "Size",a.initial_extent "Init",a.next_extent "Next",a.max_extents "MaxExt",a.pct_increase "Pct"
          FROM   dba_segments a, dba_tablespaces b WHERE a.tablespace_name = b.tablespace_name AND b.extent_management = 'DICTIONARY'
          AND a.owner <> 'SYS' ORDER BY   a.extents DESC
style37 = {1: 'Owner,l', 2: 'Name,l', 3: 'Type,l', 4: 'TsName,l', 5: 'Xtnts,r', 6: 'Size,r', 7: 'Init,r', 8: 'next,r', 9: 'MaxExt,r', 10: 'Pct,r'}

#---38---------------------------------
title38 = Invalid indexes
query38 = SELECT   owner,index_name "Index",'N/A' "Partition",table_name "Table",tablespace_name "TSName",status
          FROM   dba_indexes WHERE   partitioned = 'NO' AND status NOT IN ('VALID')UNION ALL
          SELECT   a.index_owner,a.index_name,a.partition_name,b.table_name,a.tablespace_name,a.status
          FROM   dba_ind_partitions a, dba_indexes b WHERE a.index_owner = b.owner AND a.index_name = b.index_name AND a.status NOT IN ('USABLE')
style38 = {1: 'Owner,l', 2: 'Index,l', 3: 'Partition,l', 4: 'Table,l', 5: 'TSName,l', 6: 'status,l'}

#---39---------------------------------
title39 = Indexes with different owner as their base table
query39 = SELECT   table_owner,table_name,owner "Index owner",index_name FROM   dba_indexes i WHERE   owner <> table_owner
style39 = {1: 'Table owner,l', 2: 'Table name,l', 3: 'Index owner,l', 4: 'Index name,l'}

#---40---------------------------------
title40 = Non-SYS objects in SYSTEM tablespace
query40 = SELECT   owner,segment_name "Name",segment_type "Type",bytes / 1048576 || 'M' "Size" FROM   dba_segments 
          WHERE   tablespace_name = 'SYSTEM' AND (owner NOT IN ('SYS','SYSTEM','DBSNMP','OUTLN','AURORA$JIS$UTILITY$',
                       'OSE$HTTP$ADMIN','MDSYS','ORDSYS','ORDPLUGINS','WMSYS')
                OR (segment_type = 'ROLLBACK' AND segment_name <> 'SYSTEM')) ORDER BY   4 DESC
style40 = {1: 'Owner,l', 2: 'Name,l', 3: 'Type,l', 4: 'Size,r'}

#---41---------------------------------
title41 = AUD$ table(s)
query41 = SELECT   owner,tablespace_name "TsName",partition_name "Partition",extents "Extents",bytes / 1048576 || 'M' "Size"
          FROM   dba_segments WHERE   segment_name = 'AUD$'
style41 = {1: 'Owner,l', 2: 'TsName,l', 3: 'Partition,l', 4: 'Extents,l', 5: 'Size,r'}

#---42---------------------------------
title42 = SYS objects outside SYSTEM/SYSAUX tablespace
query42 = SELECT   tablespace_name "TsName",segment_name "Name",segment_type "Type",bytes / 1048576 || 'M' "Size"
          FROM   dba_segments WHERE tablespace_name NOT IN ('SYSTEM', 'SYSAUX') AND owner = 'SYS'
          AND segment_type NOT IN ('ROLLBACK', 'TYPE1 UNDO', 'TYPE2 UNDO') ORDER BY   bytes DESC
style42 = {1: 'TsName,l', 2: 'Name,l', 3: 'Type,l', 4: 'Size,r'}

#---43---------------------------------
title43 = System tablespace fragmentation
query43 = SELECT   block_id "Start BlockNr", bytes / 1048576 || 'M' "Size" FROM   dba_free_space
          WHERE   tablespace_name = 'SYSTEM' ORDER BY   bytes DESC
style43 = {1: 'Start BlockNr,l', 2: 'Size,r'}

#---44---------------------------------
title44 = Recyclebin contents
query44 = SELECT   owner, original_name FROM   dba_recyclebin ORDER BY   owner, original_name
style44 = {1: 'Owner,l', 2: 'original_name,l'}

#---45---------------------------------
title45 = Permanent objects in temporary tablespace
query45 = SELECT   tablespace_name "TsName",owner,segment_type "SegType",COUNT ( * ) "NrSeg"
          FROM   dba_segments WHERE       owner <> 'SYS' AND tablespace_name IN (SELECT   temporary_tablespace
          FROM   dba_users WHERE   username <> 'SYS') AND tablespace_name <> 'SYSTEM'
          GROUP BY   tablespace_name, owner, segment_type
style45 = {1: 'TsName,l', 2: 'Owner,l', 3: 'SegType,l', 4: 'NrSeg,r'}

#Table properties
#---46---------------------------------
title46 = Optimizer mode
query46 = SELECT   'Optimizer mode' "Parameter ", VALUE FROM   v$parameter WHERE   name = 'optimizer_mode'
style46 = {1: 'Parameter,l', 2: 'Value,l'}

#---47---------------------------------
title47 = Analyzed objects general
query47 = SELECT   DECODE (last_analyzed, NULL, 'Non Analyzed', 'Analyzed') AS Class,COUNT ( * ) "Nr Tables"
          FROM   dba_tables WHERE   owner NOT IN('SYS','SYSTEM','DBSNMP','OUTLN','AURORA$JIS$UTILITY$',
                  'OSE$HTTP$ADMIN','MDSYS','ORDSYS','ORDPLUGINS','WMSYS')
          AND TEMPORARY = 'N' GROUP BY   DECODE (last_analyzed, NULL, 'Non Analyzed', 'Analyzed')
style47 = {1: 'Class,l', 2: 'Nr Tables,l'}

#---48---------------------------------
title48 = Analyzed and monitored tables by owner
query48 = SELECT   owner,
           SUM (DECODE (class, 'Analyzed', NrTab, 0)) "Analyzed",
           SUM (DECODE (class, 'Non Analyzed', NrTab, 0)) "Non Anal.",
           SUM (DECODE (class, 'YES', NrTab, 0)) "Monitoring",
           SUM (DECODE (class, 'NO', NrTab, 0)) "Non Monit."
          FROM   (  SELECT   owner,DECODE (last_analyzed, NULL, 'Non Analyzed', 'Analyzed') AS class,
              COUNT ( * ) AS NrTab FROM   dba_tables WHERE   owner NOT IN ('SYS', 'SYSTEM',
              'DBSNMP','OUTLN','AURORA$JIS$UTILITY$','OSE$HTTP$ADMIN','MDSYS','ORDSYS',
              'ORDPLUGINS','WMSYS') AND TEMPORARY = 'N'
            GROUP BY   owner, DECODE (last_analyzed, NULL, 'Non Analyzed', 'Analyzed')
            UNION ALL SELECT   owner, monitoring, COUNT ( * ) FROM   dba_tables
               WHERE   TEMPORARY = 'N' GROUP BY   owner, monitoring)
          GROUP BY   owner HAVING   (SUM (DECODE (class, 'Non Analyzed', NrTab, 0)) > 0
            OR SUM (DECODE (class, 'NO', NrTab, 0)) > 0)
style48 = {1: 'Owner,l', 2: 'Analyzed,l', 3: 'Non Anal.,l', 4: 'Monitoring,l', 5: 'Non Monit.,r'}

#---49---------------------------------
title49 = Non analyzed tables
query49 = SELECT t.owner, t.table_name "Name", o.created FROM   dba_tables t, dba_objects o
          WHERE t.owner = o.owner AND t.table_name = o.object_name AND o.object_type = 'TABLE'
          AND t.TEMPORARY = 'N' AND t.last_analyzed IS NULL AND t.owner NOT IN
          ('SYS','SYSTEM','DBSNMP','OUTLN','AURORA$JIS$UTILITY$','OSE$HTTP$ADMIN',
          'MDSYS','ORDSYS','ORDPLUGINS','WMSYS')
style49 = {1: 'Owner,l', 2: 'Name,l', 3: 'Created,l'}

#---50---------------------------------
title50 = Analyzed tables with non-analyzed indexes
query50 = SELECT   a.owner, a.table_name "Tablename", COUNT ( * ) "No indexes" FROM   dba_tables a, dba_indexes b
          WHERE    a.owner = b.owner AND a.table_name = b.table_name AND a.TEMPORARY = 'N' AND a.last_analyzed IS NOT NULL 
          AND b.last_analyzed IS NULL AND b.index_type NOT IN ('DOMAIN', 'LOB') GROUP BY   a.owner, a.table_name
style50 = {1: 'Owner,l', 2: 'Tablename,l', 3: 'No indexes,l'}

#---51---------------------------------
title51 = More than 5% chained rows
query51 = SELECT t.owner,t.table_name "Tablename",num_rows "Num rows",chain_cnt "Chained",last_analyzed "LastAnalzd",avg_row_len "AvgRowLen"
          FROM dba_tables t  WHERE   chain_cnt >= num_rows * 5 / 100 AND num_rows > 0 ORDER BY   chain_cnt / num_rows DESC
style51 = {1: 'Owner,l', 2: 'Tablename,l', 3: 'Num rows,l', 4: 'Chained,l', 5: 'LastAnalzd,l', 6: 'AvgRowLen,l'}

#---52---------------------------------
title52 = Largest segments top20
query52 = select * from (SELECT   owner,segment_name "Segment",segment_type "Type",tablespace_name "TsName",bytes / 1048576 || 'M' "Size"
          FROM   dba_segments ORDER BY   bytes DESC) where rownum<=20
style52 = {1: 'Owner,l', 2: 'Segment,l', 3: 'Type,l', 4: 'TsName,l', 5: 'Size,r'}

#---53---------------------------------
title53 = Largest tables by num_rows top20
query53 = SELECT * FROM (  SELECT owner,table_name "Table",tablespace_name "TsName",num_rows "Rows",blocks "UsedBlocks",
          ROUND (blocks * VALUE / 1048576, 2) || 'M' "Size", TO_CHAR (LAST_ANALYZED, 'yyyy-mm-dd') "Last Anal"
          FROM dba_tables a, v$parameter b WHERE num_rows IS NOT NULL AND b.name = 'db_block_size' ORDER BY num_rows DESC)
          WHERE ROWNUM <= 20
style53 = {1: 'Owner,l',2: 'Table,l', 3: 'TsName,l', 4: 'Rows,r', 5: 'UsedBlocks,r', 6: 'Size,r', 7: 'Last Anal,r'}

#---54---------------------------------
title54 = Unused space
query54 = SELECT   a.owner,a.table_name "Table",b.tablespace_name "TsName",ROUND ( (num_rows * avg_row_len / (VALUE - 100 - avg_space)))* VALUE "EffData",
           b.blocks * VALUE "TotAlloc",a.empty_blocks * VALUE "AboveHwm",b.blocks * VALUE - ROUND ( (num_rows * avg_row_len / (VALUE - 100 - avg_space)))* VALUE "Unused",
           ROUND(100* (b.blocks - ROUND ((num_rows * avg_row_len / (VALUE - 100 - avg_space))))/ b.blocks) "%Unused",
           a.pct_free "PctFree",b.extents "Extnts",a.num_rows "NumRows",TO_CHAR (LAST_ANALYZED, 'yyyy-mm-dd') "Analyzed"
          FROM   dba_tables a,dba_segments b,dba_tablespaces c, v$parameter d
          WHERE  a.owner = b.owner(+) AND a.table_name = b.segment_name(+) AND b.tablespace_name = c.tablespace_name(+)
           AND b.segment_type = 'TABLE' AND a.owner <> 'SYS'  AND last_analyzed IS NOT NULL AND num_rows > 0
           AND c.segment_space_management <> 'AUTO' AND (b.blocks * VALUE) >= 1 * 1024 * 1024 AND d.name = 'db_block_size' ORDER BY   7 DESC
style54 = {1: 'Owner,l', 2: 'Table,l', 3: 'TsName,l', 4: 'EffData,r', 5: 'TotAlloc,r', 6: 'AboveHwm,r', 7: 'Unused,r', 8: 'Unused,r', 9: '%Unused,r', 10: 'PctFree,r', 11: 'Extnts,r', 12: 'NumRows,r', 12: 'Analyzed,l'}

#---55---------------------------------
title55 = Tables/indexes by degree
query55 = SELECT   'TABLE' "Type", degree, COUNT ( * ) "NrTables"  FROM   dba_tables GROUP BY   degree
          UNION ALL  SELECT   'INDEX', degree, COUNT ( * )  FROM   dba_indexes GROUP BY   degree ORDER BY 2
style55 = {1: 'Type,l', 2: 'Degree,r', 3: 'NrTables,r'}

#---56---------------------------------
title56 = Parallel parameters
query56 = SELECT   1 "No", 'parallel_max_servers' "Parameter", VALUE FROM v$parameter WHERE name = 'parallel_max_servers' UNION
          SELECT   2 "No", 'parallel_min_servers' "Parameter", VALUE FROM v$parameter WHERE name = 'parallel_min_servers' UNION
          SELECT   3 "No", 'parallel_threads_per_cpu' "Parameter", VALUE FROM v$parameter WHERE name = 'parallel_threads_per_cpu' UNION
          SELECT   4 "No", 'parallel_adaptive_multi_user' "Parameter", VALUE FROM v$parameter WHERE name = 'parallel_adaptive_multi_user' UNION
          SELECT   5 "No", 'parallel_automatic_tuning' "Parameter", VALUE FROM v$parameter WHERE name = 'parallel_automatic_tuning' UNION
          SELECT   6 "No", 'cpu_count' "Parameter", VALUE FROM   v$parameter  WHERE   name = 'cpu_count'
style56 = {1: 'No,l', 2: 'Parameter,l', 3: 'Value,r'}

#---57---------------------------------
title57 = Index organized tables
query57 = SELECT   a.owner "Owner",a.table_name "TableName",a.iot_type "Type",b.index_name "IndexName"
          FROM   dba_tables a, dba_indexes b  WHERE a.owner = b.owner(+) AND a.table_name = b.table_name(+)
          AND a.iot_type IS NOT NULL AND a.table_name NOT LIKE 'DR$%' AND a.table_name NOT LIKE 'AQ$_%'
          AND a.owner NOT IN('SYS', 'SYSMAN', 'WMSYS', 'CTXSYS', 'EXFSYS', 'WKSYS')
style57 = {1: 'Owner,l', 2: 'TableName,l', 3: 'Type,l', 4: 'IndexName,l'}

#---58---------------------------------
title58 = Temporary tables
query58 = SELECT   owner,table_name "TableName",duration FROM   dba_tables WHERE   TEMPORARY = 'Y' AND owner NOT IN
          ('SYS', 'SYSTEM','DBSNMP','XDB','ORDDATA','OLAPSYS','MDSYS','SYSMAN','APEX_030200', 'WMSYS', 'CTXSYS', 'EXFSYS', 'WKSYS')
style58 = {1: 'Owner,l', 2: 'TableName,l', 3: 'Duration,l'}

#---59---------------------------------
title59 = Special constraints
query59 = SELECT   COUNT (DISTINCT owner) || ' owners' "Owner",status,'NOT DEFERRABLE' "Deferrable",'IMMEDIATE' "Deferred",
            'VALIDATED' "Validated", COUNT ( * ) "Nr constr" FROM   dba_constraints WHERE       deferrable = 'NOT DEFERRABLE'
            AND deferred = 'IMMEDIATE' AND validated = 'VALIDATED' GROUP BY   status UNION
          SELECT   COUNT (DISTINCT owner) || ' owners' "Owner",status,'NOT DEFERRABLE' "Deferrable",'IMMEDIATE' "Deferred",
           'NOT VALIDATED' "Validated", COUNT ( * ) "Nr constr" FROM   dba_constraints WHERE deferrable = 'NOT DEFERRABLE'
           AND deferred = 'IMMEDIATE' AND validated = 'NOT VALIDATED' GROUP BY   status UNION
         SELECT   owner,status,deferrable,deferred,validated,COUNT ( * ) "Nr constr" FROM   dba_constraints
          WHERE   (deferrable <> 'NOT DEFERRABLE' OR deferred <> 'IMMEDIATE')
          GROUP BY   owner, status,deferrable,deferred,validated
style59 = {1: 'Owner,l', 2: 'Status,l', 3: 'Deferrable,l', 4: 'Deferred,l', 5: 'Validated,l', 6: 'Nr constr,r'}

#---60---------------------------------
title60 = Nested tables
query60 = SELECT   owner "Owner",table_name "TableName",table_type_owner "Type Owner",table_type_name "Type Name",
          parent_table_name "Parent table",parent_table_column "Parent column" FROM   dba_nested_tables
          WHERE   owner NOT IN ('SYS', 'SYSMAN', 'WMSYS', 'CTXSYS', 'ODM', 'MDSYS', 'XDB', 'EXFSYS', 'ORDDATA')
style60 = {1: 'Owner,l', 2: 'TableName,l', 3: 'Type Owner,l', 4: 'Type Name,l', 5: 'Parent table,l', 6: 'Parent column,l'}

#---61---------------------------------
title61 = Materialized views
query61 = SELECT   owner,mview_name "Name",refresh_mode "Mode",refresh_method "Method",build_mode "Built",
           master_link "Master link", updatable "Upd?",rewrite_enabled "Rewr?",last_refresh_date "Last refr",
           staleness "Stale",compile_state "State" FROM   dba_mviews ORDER BY   compile_state, owner, mview_name
style61 = {1: 'Owner,l', 2: 'Name,l', 3: 'Mode,l', 4: 'Method,l', 5: 'Built,l', 6: 'Master link,l', 7: 'Upd?,l', 8: 'Rewr?,l', 9: 'Last refr,l', 10: 'Stale,l', 11: 'State,l'}

#Jobs and AQ information
#---62---------------------------------
title62 = Scheduler Job information
query62 = SELECT   owner || '.' || job_name "Name",
           CASE WHEN job_type = 'PLSQL_BLOCK' THEN '[PLSQL_BLOCK]' ELSE program_owner || '.' || program_name END "Action",
           DECODE (enabled, 'TRUE', 'YES', 'NO') "Ena",DECODE (SYSTEM, 'TRUE', 'YES', 'NO') "Sys",
           DECODE (restartable, 'TRUE', 'YES', 'NO') "Rst",SUBSTR (state, 1, 3) "Stat",
           job_priority "Pri",run_count "RunCnt",failure_count "Fail",retry_count "Retr",
           TO_CHAR (LAST_START_DATE, 'yyyy-mm-dd hh24:mi:ss') "Last start date",
           TO_CHAR (NEXT_RUN_DATE, 'yyyy-mm-dd hh24:mi:ss') "Next run date",
           job_class "Class",
           CASE WHEN schedule_type IN ('CALENDAR', 'ONCE', 'PLSQL', 'IMMEDIATE') THEN schedule_type ELSE
                 DECODE (schedule_type,'WINDOW_GROUP', 'WG', 'NAMED', 'NAME', 'WINDOW', 'WIN','EVENT', 'EVT', schedule_type)
                 || '='|| schedule_owner || '.'|| schedule_name END "Schedule",
           comments,
           CASE WHEN repeat_interval IS NOT NULL THEN 'repeat_intval:' || repeat_interval END
           || ' ' || CASE WHEN end_date IS NOT NULL THEN 'end_date:' || TO_CHAR (end_date, 'yyyy-mm-dd hh24:mi:ss') END
           || ' ' || CASE WHEN auto_drop = 'TRUE' THEN 'auto_drop:true' END
           || ' ' || CASE WHEN max_runs IS NOT NULL THEN 'max_runs:' || max_runs END
           || ' ' || CASE WHEN max_failures IS NOT NULL THEN 'max_fail:' || max_failures END
           || ' ' || '' "Extra" FROM   dba_scheduler_jobs ORDER BY   last_start_date DESC
style62 = {1: 'Name,l', 2: 'Action,l', 3: 'Ena,l', 4: 'Sys,l', 5: 'Rst,l', 6: 'Stat,l', 7: 'Pri,r', 8: 'RunCnt,r', 9: 'Fail,r', 10: 'Retr,r',11: 'Last start date,l', 12: 'Next run date,l', 13: 'Class,l', 14: 'Schedule,l', 15: 'comments,l', 16: 'Extra,l'}

#---63---------------------------------
title63 = DBMS Job information
query63 = SELECT   JOB,SCHEMA_USER "Schema",
           TO_CHAR (LAST_DATE, 'yyyy-mm-dd hh24:mi:ss') "Last date",
           TO_CHAR (THIS_DATE, 'yyyy-mm-dd hh24:mi:ss') "This date",
           TO_CHAR (NEXT_DATE, 'yyyy-mm-dd hh24:mi:ss') "Next date",
           BROKEN "Brkn",FAILURES "Fail",WHAT
          FROM   dba_jobs ORDER BY   job
style63 = {1: 'JOB,r', 2: 'Schema,l', 3: 'Last date,l', 4: 'This date,l', 5: 'Next date,l', 6: 'Brkn,r', 7: 'Fail,r', 8: 'What,l'}

#---64---------------------------------
title64 = Job queue parameters
query64 = SELECT   'job_queue_processes' "Parameter", VALUE FROM   v$parameter WHERE   NAME = 'job_queue_processes' UNION
          SELECT   'job_queue_interval' "Parameter", VALUE FROM   v$parameter WHERE   name = 'job_queue_interval' UNION
          SELECT   'aq_tm_processes' "Parameter", VALUE FROM   v$parameter WHERE   name = 'aq_tm_processes'
style64 = {1: 'Parameter,l', 2: 'Value,r'}

#---65---------------------------------
title65 = Scheduler attributes
query65 = SELECT ATTRIBUTE_NAME "Attribute", VALUE FROM dba_scheduler_global_attribute
style65 = {1: 'Attribute,l', 2: 'Value,r'}

#---66---------------------------------
title66 = Advanced queues
query66 = SELECT   OWNER "Owner",NAME "Queue",QUEUE_TABLE "QueueTable",USER_COMMENT "Comment"
          FROM   dba_queues WHERE   owner NOT IN ('SYS', 'SYSTEM') AND queue_type = 'NORMAL_QUEUE'
style66 = {1: 'Owner,l', 2: 'Queue,l', 3: 'QueueTable,l', 4: 'Comment,l'}

#Memory information
#---67---------------------------------
title67 = SGA Memory
query67 = SELECT   'Parameter shared_pool_size' "Parameter", VALUE FROM   v$parameter WHERE   NAME = 'shared_pool_size' UNION
          SELECT   'Parameter shared_pool_reserved_size' "Parameter", VALUE FROM   v$parameter WHERE   name = 'shared_pool_reserved_size' UNION
          SELECT   'Parameter large_pool_size' "Parameter", VALUE FROM   v$parameter WHERE   name = 'large_pool_size' UNION
          SELECT   'Parameter java_pool_size' "Parameter", VALUE FROM   v$parameter  WHERE   name = 'java_pool_size'
style67 = {1: 'Parameter,l', 2: 'Value,r'}

#---68---------------------------------
title68 = PGA Memory
query68 = SELECT   'Parameter sort_area_size' "Parameter", VALUE FROM   v$parameter WHERE   NAME = 'sort_area_size' UNION
          SELECT   'Parameter sort_area_retained_size' "Parameter", VALUE FROM   v$parameter WHERE   name = 'sort_area_retained_size' UNION
          SELECT   'Parameter hash_area_size' "Parameter", VALUE FROM   v$parameter WHERE   name = 'hash_area_size' UNION
          SELECT   'Parameter pga_aggregate_target' "Parameter", VALUE FROM   v$parameter WHERE   name = 'pga_aggregate_target' UNION
          SELECT   'Parameter workarea_size_policy' "Parameter", VALUE FROM   v$parameter WHERE   name = 'workarea_size_policy' UNION
          SELECT   'pga_aggregate_target' "Parameter", VALUE  FROM   v$parameter  WHERE   NAME = 'pga_aggregate_target'
style68 = {1: 'Parameter,l', 2: 'Value,r'}

#---69---------------------------------
title69 = Buffer cache contents top20
query69 = SELECT * FROM ( SELECT   d.NAME "Owner",d.Name2 "Name",ROUND (cnt * VALUE / 1048576, 2) || 'M' "Size"
           FROM   (  SELECT   c.NAME, b.NAME name2, COUNT ( * ) cnt FROM   v$bh a, sys.obj$ b, sys.user$ c
               WHERE   a.objd = b.obj# AND b.owner# = c.user# GROUP BY   c.NAME, b.NAME  UNION ALL
            SELECT   'SYS', '[TEMP SEGS]', COUNT ( * ) cnt FROM   V$BH a, v$datafile b, sys.TS$ c
             WHERE   a.FILE# = b.FILE# AND b.ts# = c.ts# AND c.CONTENTS$ = 1 UNION ALL
            SELECT   'SYS', '[UNDO SEGS]', COUNT ( * ) cnt FROM   V$BH a, v$datafile b, sys.TS$ c
             WHERE       a.FILE# = b.FILE# AND b.ts# = c.ts# AND c.CONTENTS$ = 0 AND BITAND (c.flags, 16) = 16) d,
           v$parameter e WHERE   e.name = 'db_block_size' ORDER BY   3 DESC )  WHERE ROWNUM <= 20
style69 = {1: 'Owner,l', 2: 'Name,l', 3: 'Size,r'}

#---70---------------------------------
title70 = SGA Statistics
query70 = SELECT   NVL (POOL, ' ') "Pool",name,ROUND (bytes / 1048576, 2) || 'M' VALUE,bytes
          FROM   v$sgastat WHERE   pool IS NULL OR name IN 
          ('free memory','sql area','library cache','PL/SQL MPCODE','dictionary cache') UNION
          SELECT   * FROM   (  SELECT   pool,name,ROUND (bytes / 1048576, 2) || 'M' VALUE, bytes
              FROM   v$sgastat ORDER BY   bytes DESC) WHERE   ROWNUM < 10 ORDER BY   3 DESC
style70 = {1: 'Pool,l', 2: 'Name,l', 3: 'Value,r', 4: 'Bytes,r'}

#---71---------------------------------
title71 = PGA statistics
query71 = SELECT   NAME, ROUND (VALUE / 1048576, 2) || 'M' VALUE, VALUE bytes  FROM   v$pgastat
style71 = {1: 'Name,l', 2: 'Value,r', 3: 'bytes,r'}

#---72---------------------------------
title72 = Workarea histogram
query72 = SELECT   LOW_OPTIMAL_SIZE "Low",HIGH_OPTIMAL_SIZE "High",OPTIMAL_EXECUTIONS "Optimal",ONEPASS_EXECUTIONS "OnePass", 
          MULTIPASSES_EXECUTIONS "MultiPass" FROM   v$sql_workarea_histogram WHERE   total_executions <> 0
style72 = {1: 'Low,r', 2: 'High,r', 3: 'Optimal,r', 4: 'OnePass,r', 5: 'MultiPass,r'}

#---73---------------------------------
title73 = Cache sizes
query73 = SELECT   'Block size' name, VALUE FROM   v$parameter WHERE   name = 'db_block_size' UNION
          SELECT   'db_cache_size' name, VALUE FROM   v$parameter WHERE   name = 'db_cache_size' UNION
          SELECT   'db_block_buffers' name, VALUE FROM   v$parameter WHERE   name = 'db_block_buffers' UNION
          SELECT   name, VALUE FROM   v$parameter WHERE   name LIKE 'db_%k_cache_size' UNION
          SELECT   name, VALUE FROM   v$parameter WHERE   name = 'db_keep_cache_size' UNION
          SELECT   name, VALUE FROM   v$parameter WHERE   name = 'db_recycle_cache_size'
style73 = {1: 'Name,l', 2: 'Value,r'}

#---74---------------------------------
title74 = Tables by buffer pool
query74 = SELECT   buffer_pool, objtype "Obj type", COUNT (table_name) "NrObj"
           FROM   (SELECT   buffer_pool, table_name, 'Table' AS objtype FROM   dba_tables WHERE   buffer_pool IS NOT NULL UNION ALL
            SELECT   buffer_pool, table_name, 'Tab part' AS objtype FROM   dba_tab_partitions UNION ALL
            SELECT   buffer_pool, index_name, 'Index' AS objtype FROM   dba_indexes WHERE   buffer_pool IS NOT NULL UNION ALL
            SELECT   buffer_pool, index_name, 'Ind part' AS objtype  FROM   dba_ind_partitions)
          GROUP BY   buffer_pool, objtype ORDER BY   1, 2 DESC
style74 = {1: 'Buffer_pool,l', 2: 'Obj type,l', 3: 'NrObj,r'}

#---75---------------------------------
title75 = PGA/optimizer parameters
query75 = SELECT   NAME, VALUE FROM   v$parameter WHERE   NAME IN ('session_cached_cursors','open_cursors',
          'processes','sessions','cursor_space_for_time','cursor_sharing','pga_aggregate_target','db_block_size',
          'workarea_size_policy','compatible', 'cpu_count') OR name LIKE 'optimizer%' OR name LIKE 'sort%'
          OR name LIKE 'hash%' ORDER BY   name
style75 = {1: 'Name,l', 2: 'Value,r'}

#---76---------------------------------
title76 = Latest SGA resize operations
query76 = SELECT   COMPONENT,OPER_TYPE "OperType",ROUND (INITIAL_SIZE / 1048576, 2) || 'M' "Init",
          ROUND (TARGET_SIZE / 1048576, 2) || 'M' "Target",ROUND (FINAL_SIZE / 1048576, 2) || 'M' "Final",
          STATUS,TO_CHAR (START_TIME, 'yyyy-mm-dd hh24:mi:ss') "Start",TO_CHAR (END_TIME, 'yyyy-mm-dd hh24:mi:ss') "End"
          FROM   (  SELECT   component,oper_type,initial_size,target_size,final_size,status,
          start_time,end_time, DENSE_RANK () OVER (ORDER BY start_time DESC) AS drank
              FROM   v$sga_resize_ops ORDER BY   TO_CHAR (start_time, 'yyyymmddhh24miss') DESC) WHERE   drank < 11
style76 = {1: 'Component,l', 2: 'OperType,l', 3: 'Init,r', 4: 'Target,r', 5: 'Final,r', 6: 'Status,l', 7: 'Start,l', 8: 'End,l'}

#Security
#---77---------------------------------
title77 = Security parameters
query77 = SELECT   'remote_login_passwordfile' "Parameter", VALUE FROM   v$parameter  WHERE   NAME = 'remote_login_passwordfile' UNION
          SELECT   'remote_os_authent' "Parameter", VALUE FROM   v$parameter WHERE   name = 'remote_os_authent' UNION
          SELECT   'os_authent_prefix' "Parameter", VALUE FROM   v$parameter  WHERE   name = 'os_authent_prefix'
style77 = {1: 'Parameter,l', 2: 'Value,l'}

#---78---------------------------------
title78 = Sysdba users
query78 = SELECT   USERNAME, SYSDBA, SYSOPER FROM v$pwfile_users 
style78 = {1: 'Username,l', 2: 'Sysdba,l', 3: 'Sysoper,l'}

#---79---------------------------------
title79 = Overview users
query79 = SELECT   username,default_tablespace "DefTs",temporary_tablespace "TempTs", TO_CHAR (CREATED, 'yyyy-mm-dd') "Created",
           COUNT (s.segment_name) "NrSeg",ROUND (NVL (SUM (bytes), 0) / 1048576, 2) || 'M' "TotSize",
           DECODE (PASSWORD, 'EXTERNAL', 'Yes', 'No') "OPS$ ?",LOWER (account_status) Account,profile
          FROM   dba_users u, dba_segments s WHERE   u.username = s.owner(+) GROUP BY   username,
           default_tablespace,temporary_tablespace,created,password,account_status,profile
          ORDER BY   DECODE (username, 'SYS', 'AAAAAAAAA','SYSTEM', 'AAAAAAAAB',username)
style79 = {1: 'Username,l', 2: 'DefTs,l', 3: 'TempTs,l', 4: 'Created,l', 5: 'NrSeg,r', 6: 'TotSize,r', 7: 'OPS$ ?,l', 8: 'Account,l', 9: 'Profile,l'}

#---80---------------------------------
title80 = User quotas
query80 = SELECT   username,tablespace_name "Tsname",round(bytes / 1048576,2) || 'M' "Bytes",
          DECODE (max_bytes, -1, 'Unlimited', max_bytes / 1048576 || 'M') "MaxBytes"
          FROM   dba_ts_quotas ORDER BY   username, tablespace_name
style80 = {1: 'Username,l', 2: 'Tsname,l', 3: 'Bytes,r', 4: 'MaxBytes,l'}

#Networking
#---81---------------------------------
title81 = Multi Threaded Server info
query81 = SELECT   'Parameter mts_dispatchers' "Parameter", VALUE FROM   v$parameter WHERE   NAME = 'mts_dispatchers' UNION
          SELECT   'Parameter dispatchers' "Parameter", VALUE FROM   v$parameter WHERE   name = 'dispatchers' UNION
          SELECT   'Parameter mts_servers' "Parameter", VALUE FROM   v$parameter WHERE   name = 'mts_servers' UNION
          SELECT   'Parameter shared_servers' "Parameter", VALUE  FROM   v$parameter  WHERE   name = 'shared_servers'
style81 = {1: 'Parameter,l', 2: 'Value,l'}

#---82---------------------------------
title82 = Dispatchers
query82 = SELECT   NAME,NETWORK,STATUS,ACCEPT,MESSAGES,BYTES,ROUND (IDLE / 1048576, 2) || 'M' IDLE,BUSY
          FROM   v$dispatcher ORDER BY   name
style82 = {1: 'NAME,l', 2: 'NETWORK,l', 3: 'STATUS,l', 4: 'ACCEPT,l', 5: 'MESSAGES,r', 6: 'BYTES,r', 7: 'IDLE,r', 8: 'BUSY,r'}

#---83---------------------------------
title83 = Shared servers
query83 = SELECT   NAME,STATUS,MESSAGES,BYTES,ROUND (IDLE / 1048576, 2) || 'M' IDLE,BUSY
          FROM   v$shared_server ORDER BY   name
style83 = {1: 'NAME,l', 2: 'STATUS,l', 3: 'MESSAGES,r', 4: 'BYTES,r', 5: 'IDLE,r', 6: 'BUSY,r'}

#---84---------------------------------
title84 = Dispatcher queues
query84 = SELECT   d.name,q.wait,q.totalq,DECODE (q.totalq, 0, 0, ROUND (WAIT / q.TOTALQ)) "Pct wait",q.queued
          FROM   v$dispatcher d, v$queue q WHERE   d.paddr = q.paddr
style84 = {1: 'Name,l', 2: 'Wait,r', 3: 'Totalq,r', 4: 'Pct wait,r', 5: 'Queued,r'}

#---85---------------------------------
title85 = Database links
query85 = SELECT OWNER,DB_LINK "Name",USERNAME "User",HOST FROM   dba_db_links ORDER BY   db_link
style85 = {1: 'Owner,l', 2: 'Name,l', 3: 'User,l', 4: 'Host,l'}

#Various 
#---86---------------------------------
title86 = v$version
query86 = SELECT   banner FROM v$version
style86 = {1: 'Banner,l'}

#---87---------------------------------
title87 = Dba registry
query87 = SELECT   COMP_ID "Id", COMP_NAME "Name", VERSION,STATUS FROM   dba_registry
style87 = {1: 'Id,l', 2: 'Name,l', 3: 'Version,l', 4: 'Status,l'}

#---88---------------------------------
title88 = v$license
query88 = SELECT   'Sessions max' "Parameter", SESSIONS_MAX "Value" FROM v$license UNION
          SELECT   'Sessions warning' "Parameter", SESSIONS_WARNING "Value" FROM   v$license UNION
          SELECT   'Sessions current' "Parameter", SESSIONS_CURRENT "Value" FROM   v$license UNION
          SELECT   'Sessions highwater' "Parameter", SESSIONS_HIGHWATER "Value" FROM   v$license UNION
          SELECT   'Users max' "Parameter", USERS_MAX "Value" FROM v$license UNION
          SELECT   'Cpu count current' "Parameter", CPU_COUNT_CURRENT "Value" FROM   v$license UNION
          SELECT   'Cpu core count current' "Parameter", CPU_CORE_COUNT_CURRENT "Value" FROM   v$license UNION
          SELECT   'Cpu socket count current' "Parameter",  CPU_SOCKET_COUNT_CURRENT "Value" FROM   v$license UNION
          SELECT   'Cpu count highwater' "Parameter", CPU_COUNT_HIGHWATER "Value" FROM   v$license UNION
          SELECT   'Cpu core count highwater' "Parameter",  CPU_CORE_COUNT_HIGHWATER "Value" FROM   v$license UNION
          SELECT   'Cpu socket count highwater' "Parameter", CPU_SOCKET_COUNT_HIGHWATER "Value" FROM   v$license
style88 = {1: 'Parameter,l', 2: 'Value,r'}

#---89---------------------------------
title89 = Registry history
query89 = SELECT   TO_CHAR (ACTION_TIME, 'yyyy-mm-dd hh24:mi:ss') "Action time",ACTION,NAMESPACE,
           ID,VERSION,COMMENTS FROM   sys.registry$history ORDER BY   action_time DESC, id DESC
style89 = {1: 'Action time,l', 2: 'ACTION,l', 3: 'NAMESPACE,l', 4: 'ID,r', 5: 'VERSION,l', 6: 'COMMENTS,l'}

#---90---------------------------------
title90 = Featured init.ora parameters
query90 = SELECT   name "Parameter", isdefault "Dflt?", VALUE FROM   v$parameter WHERE   (isdefault = 'FALSE'
          OR name IN('shared_pool_size','db_block_buffers','db_block_size','log_buffer','large_pool_size',
          'java_pool_size','timed_statistics','sql_trace','timed_os_statistics','utl_file_dir','user_dump_dest',
          'background_dump_dest','log_archive_start','cpu_count', 'disk_asynch_io','control_file_record_keep_time',
          'parallel_max_servers','parallel_automatic_tuning','global_names')) AND NAME NOT LIKE '/_%' ESCAPE '/'
          ORDER BY   name      
style90 = {1: 'Parameter,l', 2: 'Dflt?,l', 3: 'Value,l'}

#---91---------------------------------
title91 = All NLS parameters
query91 = SELECT   c.parameter "Name",c.VALUE "Database", b.VALUE "Instance",a.VALUE "Session"
          FROM   nls_session_parameters a,nls_instance_parameters b, nls_database_parameters c
          WHERE   c.parameter = b.parameter(+) AND c.parameter = a.parameter(+) ORDER BY   1
style91 = {1: 'Name,l', 2: 'Database,l', 3: 'Instance,l', 4: 'Session,l'}

#---92---------------------------------
title92 = Database properties
query92 = SELECT   PROPERTY_NAME "Name", PROPERTY_VALUE "Value" FROM   database_properties  WHERE   property_name NOT LIKE 'NLS%'
style92 = {1: 'Name,l', 2: 'Value,r'}

#---93---------------------------------
title93 = Database triggers
query93 = SELECT   OWNER,TRIGGER_NAME "Name",TRIGGERING_EVENT "Event",BASE_OBJECT_TYPE "Object", STATUS, DESCRIPTION
          FROM   dba_triggers WHERE   base_object_type NOT IN ('TABLE', 'VIEW')
style93 = {1: 'Owner,l', 2: 'Name,l', 3: 'Event,l', 4: 'Object,l', 5: 'Status,l', 6: 'Description,l'}

#Database Features 
#---94---------------------------------
title94 = Java stored procedures
query94 = SELECT   owner "Username", COUNT ( * ) "Nr" FROM   dba_objects WHERE   object_type LIKE 'JAVA%' GROUP BY   owner
style94 = {1: 'Username,l', 2: 'Nr,r'}


#---95---------------------------------
title95 = Database links
query95 = SELECT   owner "Username", COUNT ( * ) "Nr" FROM   dba_db_links GROUP BY   owner
style95 = {1: 'Username,l', 2: 'Nr,r'}

#---96---------------------------------
title96 = Resource plans
query96 = SELECT   plan FROM dba_rsrc_plans
style96 = {1: 'plan,l'}

#---97---------------------------------
title97 = Directories
query97 = SELECT   owner "Username", COUNT ( * ) "Nr"  FROM   dba_directories GROUP BY   owner
style97 = {1: 'Username,l', 2: 'Nr,r'}

#---98---------------------------------
title98 = Materialized views
query98 = SELECT   owner "Username", COUNT ( * ) "Nr"  FROM   dba_mviews GROUP BY   owner
style98 = {1: 'Username,l', 2: 'Nr,r'}

#---99---------------------------------
title99 = Mat. view logs
query99 = SELECT   log_owner "LogOwner", COUNT ( * ) "Nr" FROM   dba_mview_logs GROUP BY   log_owner
style99 = {1: 'Username,l', 2: 'Nr,r'}

#---100---------------------------------
title100 = Refresh groups
query100 = SELECT   rowner "Owner", COUNT ( * ) "Nr" FROM   dba_refresh GROUP BY   rowner
style100 = {1: 'Username,l', 2: 'Nr,r'}

#---101---------------------------------
title101 = Libraries
query101 = SELECT   owner "Username", COUNT ( * ) "Nr" FROM   dba_libraries GROUP BY   owner
style101 = {1: 'Username,l', 2: 'Nr,r'}

#---102---------------------------------
title102 = Database event triggers
query102 = SELECT   owner "Username", COUNT ( * ) "Nr", triggering_event "Event" FROM   all_triggers
           WHERE   base_object_type = 'DATABASE' GROUP BY   owner, triggering_event
style102 = {1: 'Username,l', 2: 'Nr,r', 3: 'Event,l'}

#---103---------------------------------
title103 = Advanced queues
query103 = SELECT   owner "Username", COUNT ( * ) "Nr" FROM   dba_queues GROUP BY   owner
style103 = {1: 'Username,l', 2: 'Nr,r'}

#---104---------------------------------
title104 = Stored outlines
query104 = SELECT   owner "Username", COUNT ( * ) "Nr" FROM   dba_outlines GROUP BY   owner
style104 = {1: 'Username,l', 2: 'Nr,r'}

#---105---------------------------------
title105 = FGAC/VPD
query105 = SELECT object_owner "Object owner", COUNT ( * ) "Nr" FROM dba_policies GROUP BY object_owner
style105 = {1: 'Object owner,l', 2: 'Nr,r'}

#---106---------------------------------
title106 = Audit options
query106 = SELECT   'Stmt audit opts' "Type", user_name "Username", COUNT ( * ) "Nr" FROM   dba_stmt_audit_opts GROUP BY   user_name
           UNION ALL  SELECT   'Priv audit opts' "Type", user_name "Username", COUNT ( * ) "Nr" FROM   dba_priv_audit_opts GROUP BY   user_name
style106 = {1: 'Type,l', 2: 'Username,l', 3: 'Nr,r'}

#---107---------------------------------
title107 = Clusters (non SYS)
query107 = SELECT   owner "Username", COUNT ( * ) "Nr"  FROM   dba_clusters  WHERE   owner <> 'SYS' GROUP BY   owner
style107 = {1: 'Username,l', 2: 'Nr,r'}

#---108---------------------------------
title108 = Domain indexes
query108 = SELECT   owner "Username", COUNT ( * ) "Nr"  FROM   dba_indexes  WHERE   index_type = 'DOMAIN' GROUP BY   owner
style108 = {1: 'Username,l', 2: 'Nr,r'}

#---109---------------------------------
title109 = Dimensions
query109 = SELECT   owner "Username", COUNT ( * ) "Nr"  FROM   dba_dimensions GROUP BY   owner
style109 = {1: 'Username,l', 2: 'Nr,r'}

#---110---------------------------------
title110 = Partitioned tables
query110 = SELECT   owner "Username", partitioning_type "Type", COUNT ( * ) "Nr" FROM   dba_part_tables GROUP BY   owner, partitioning_type ORDER BY   owner, partitioning_type
style110 = {1: 'Username,l', 2: 'Type,l', 3: 'Nr,r'}

#---111---------------------------------
title111 = Object types (non-SYS)
query111 = SELECT   owner, COUNT ( * ) "Nr" FROM   dba_types WHERE   owner <> 'SYS' AND owner IS NOT NULL GROUP BY   owner
style111 = {1: 'Owner,l', 2: 'Nr,r'}

#---112---------------------------------
title112 = Profiles
query112 = SELECT   p.profile "Name", COUNT ( * ) "Nr users"
           FROM   (  SELECT   DISTINCT profile FROM dba_profiles) p, dba_users u
           WHERE   p.profile = u.profile(+) GROUP BY   p.profile
style112 = {1: 'Name,l', 2: 'Nr,r'}

#---113---------------------------------
title113 = Streams processes
query113 = SELECT   capture_user "Username", 'CAPTURE' "Type", COUNT ( * ) "Nr" FROM   dba_capture GROUP BY   capture_user UNION ALL
           SELECT   apply_user, 'APPLY', COUNT ( * )  FROM   dba_apply GROUP BY   apply_user UNION ALL
           SELECT   '-', 'PROPAGATION', COUNT ( * )  FROM   dba_propagation HAVING   COUNT ( * ) > 0
style113 = {1: 'Username,l', 2: 'Type,l', 3: 'Nr,r'}

#---114---------------------------------
title114 = Applications contexts
query114 = SELECT   schema, TYPE, COUNT ( * ) "Nr" FROM   dba_context GROUP BY   schema, TYPE
style114 = {1: 'Schema,l', 2: 'Type,l', 3: 'Nr,r'}

#---115---------------------------------
title115 = FGA policies
query115 = SELECT   object_schema "Towner", COUNT ( * ) "Nr" FROM   dba_audit_policies GROUP BY   object_schema
style115 = {1: 'Towner,l', 2: 'Nr,r'}

#---116---------------------------------
title116 = Analytic workspaces
query116 = SELECT   owner "Username", COUNT ( * ) "Nr" FROM   dba_aws GROUP BY   owner
style116 = {1: 'Username,l', 2: 'Nr,r'}

#---117---------------------------------
title117 = External tables
query117 = SELECT   owner "Username", COUNT ( * ) "Nr" FROM   dba_external_tables GROUP BY   owner
style117 = {1: 'Username,l', 2: 'Nr,r'}

#---118---------------------------------
title118 = Scheduler jobs
query118 = SELECT   owner "Username", COUNT ( * ) "Nr" FROM   dba_scheduler_jobs GROUP BY   owner
style118 = {1: 'Username,l', 2: 'Nr,r'}

#---119---------------------------------
title119 = Tables with LONG columns
query119 = SELECT   owner,DECODE (SUM (DECODE (table_name, 'PLAN_TABLE', 1, 0)),0, 'No','Yes') "Has plantable?",
           COUNT ( * ) "Nr cols" FROM   dba_tab_columns WHERE   data_type = 'LONG'
           AND owner NOT IN ('SYS', 'SYSTEM', 'OUTLN', 'WMSYS') GROUP BY   owner
style119 = {1: 'Owner,l', 2: 'Has plantable?,l', 3: 'Nr cols,r'}

#---120---------------------------------
title120 = Feature usage
query120 = SELECT   NAME,VERSION,DETECTED_USAGES "Uses",CURRENTLY_USED "Curr",LAST_USAGE_DATE "Last used",
           DESCRIPTION FROM   dba_feature_usage_statistics
           WHERE   detected_usages > 0 AND version = (  SELECT   version FROM v$instance) ORDER BY   name
style120 = {1: 'NAME,l', 2: 'VERSION,l', 3: 'Uses,l', 4: 'Curr,l', 5: 'Last used,l', 6: 'DESCRIPTION,l'}

#---121---------------------------------
title121 = Nr of objects by type and owner
query121 = SELECT owner,
           SUM (CASE WHEN object_type = 'TABLE' THEN 1 ELSE 0 END) "Tab",
           SUM (CASE WHEN object_type = 'INDEX' THEN 1 ELSE 0 END) "Ind",
           SUM (CASE WHEN object_type = 'VIEW' THEN 1 ELSE 0 END) "View",
           SUM (CASE WHEN object_type = 'SYNONYM' THEN 1 ELSE 0 END) "Syn",
           SUM (CASE WHEN object_type = 'SEQUENCE' THEN 1 ELSE 0 END) "Seq",
           SUM (CASE WHEN object_type = 'TRIGGER' THEN 1 ELSE 0 END) "Trig",
           SUM (CASE WHEN object_type = 'LOB' THEN 1 ELSE 0 END) "Lob",
           SUM(CASE WHEN object_type IN ('PACKAGE', 'PROCEDURE', 'FUNCTION') THEN 1 ELSE 0 END) "Pls",
           SUM (CASE WHEN object_type LIKE 'JAVA%' THEN 1 ELSE 0 END) "Jav",
           SUM (CASE WHEN object_type = 'TABLE PARTITION' THEN 1 ELSE 0 END) "Part",
           SUM (CASE WHEN object_type = 'DIRECTORY' THEN 1 ELSE 0 END) "Dir",
           SUM (CASE WHEN object_type = 'QUEUE' THEN 1 ELSE 0 END) "Qu",
           SUM (CASE WHEN object_type = 'TYPE' THEN 1 ELSE 0 END) "Typ",
           SUM (CASE WHEN object_type = 'CONTEXT' THEN 1 ELSE 0 END) "Ctx",
           SUM (CASE WHEN object_type = 'CLUSTER' THEN 1 ELSE 0 END) "Clu",
           SUM (CASE WHEN object_type = 'JOB' THEN 1 ELSE 0 END) "Job",
           COUNT ( * ) AS "Total"
           FROM   dba_objects
           WHERE   owner NOT IN ('SYS', 'ORDSYS', 'MDSYS','XDB', 'CTXSYS', 'WMSYS',
           'EXFSYS','ORDPLUGINS','OUTLN', 'TSMSYS') GROUP BY   owner
           HAVING   COUNT ( * ) > 0 ORDER BY   COUNT ( * ) DESC
style121 = {1: 'Owner,l', 2: 'Tab,r', 3: 'Ind,r', 4: 'View,r', 5: 'Syn,r', 6: 'Seq,r', 7: 'Trig,r', 8: 'Lob,r', 9: 'Pls,r', 10: 'Jav,r', 11: 'Part,r', 12: 'Dir,r', 13: 'Qu,r', 14: 'Typ,r', 15: 'Ctx,r', 16: 'Clu,r', 17: 'Job,r', 18: 'Total,r'}
